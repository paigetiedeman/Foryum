{"version":3,"sources":["components/Header.js","components/ReusableForm.js","components/NewRecipeForm.js","components/Recipe.js","components/RecipeList.js","components/RecipeDetail.js","components/EditRecipeForm.js","actions/ActionTypes.js","actions/index.js","components/RecipeControl.js","components/App.js","reducers/index.js","reducers/form-visible-reducer.js","reducers/recipe-list-reducer.js","index.js"],"names":["Header","className","ReusableForm","props","Fragment","onSubmit","formSubmissionHandler","type","name","placeholder","buttonText","NewRecipeForm","event","preventDefault","onNewRecipeCreation","title","target","value","time","description","upvoteCount","downvoteCount","id","v4","timeOpen","Moment","formattedWaitTime","fromNow","Recipe","onClick","onUpVoteClick","onDownVoteClick","whenRecipeClicked","RecipeList","Object","values","recipeList","map","recipe","onRecipeSelection","onUpvote","onDownvote","RecipeDetail","onClickingDelete","onClickingEdit","EditRecipeForm","onEditRecipe","ADD_RECIPE","TOGGLE_FORM","DELETE_RECIPE","UPDATE_TIME","UPVOTE","DOWNVOTE","toggleForm","c","addRecipe","RecipeControl","updateRecipeElapsedWaitTime","dispatch","mainRecipeList","forEach","newFormattedWaitTime","action","handleClick","state","selectedRecipe","setState","editing","a","handleAddingNewRecipeToList","newRecipe","handleChangingSelectedRecipe","handleDeletingRecipe","handleEditClick","handleEditingRecipeInList","recipeToEdit","handleUpvote","handleDownvote","this","waitTimeUpdateTimer","setInterval","clearInterval","currentlyVisibleState","formVisibleOnPage","React","Component","connect","arraySorted","entries","sort","b","fromEntries","sortHappy","App","rootReducer","combineReducers","assign","newState","newState1","newState2","updatedState","store","createStore","subscribe","console","log","getState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.51abba2b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Header(){\r\n  return (\r\n    <>\r\n      <h1 className=\"title\">Foryum Recipe's</h1>\r\n      <br/>\r\n    </>\r\n  );\r\n}\r\nexport default Header;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction ReusableForm(props) {\r\n  return (\r\n    <React.Fragment>\r\n      <form onSubmit={props.formSubmissionHandler}>\r\n        <input\r\n          type='text'\r\n          name='title'\r\n          placeholder='Chicken Doodle Sup' \r\n          className='form-control'/>\r\n          <br />\r\n        <input\r\n          type='number'\r\n          name='time'\r\n          placeholder='60'  \r\n          className='form-control'/>\r\n          <br />\r\n        <textarea\r\n          name='description'\r\n          placeholder='Describe your ingredients and if there really is such a thing as love, or if it is just nostalgia for a safe time' \r\n          className='form-control'/>\r\n          <br />\r\n        <button type='submit' className='btn btn-dark'>{props.buttonText}</button>\r\n      </form>\r\n      <br />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\n\r\nReusableForm.propTypes = {\r\n  formSubmissionHandler: PropTypes.func,\r\n  buttonText: PropTypes.string\r\n};\r\n\r\nexport default ReusableForm;","import React from 'react';\r\nimport { v4 } from 'uuid'; \r\nimport PropTypes from \"prop-types\";\r\nimport ReusableForm from \"./ReusableForm\";\r\nimport Moment from \"moment\";\r\n\r\nfunction NewRecipeForm(props){\r\n  \r\n  function handleNewRecipeFormSubmission(event){\r\n    event.preventDefault();\r\n    props.onNewRecipeCreation({\r\n      title: event.target.title.value,\r\n      time: event.target.time.value,\r\n      description: event.target.description.value,\r\n      upvoteCount: 0,\r\n      downvoteCount: 0,\r\n      id: v4(),\r\n      timeOpen: new Moment(),\r\n      formattedWaitTime: new Moment().fromNow(true)\r\n    });\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <ReusableForm \r\n      formSubmissionHandler = {handleNewRecipeFormSubmission}\r\n      buttonText=\"Add Recipe\" />\r\n    </>\r\n  );\r\n}\r\n\r\nNewRecipeForm.propTypes = {\r\n  onNewRecipeCreation: PropTypes.func\r\n};\r\n\r\nexport default NewRecipeForm;","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nfunction Recipe(props){\r\n  return (\r\n    <>\r\n      <div>\r\n        <h2>{props.title}</h2>\r\n        <p><em>Time to Cook: {props.time} minutes</em></p>\r\n        \r\n        <div onClick={() => props.onUpVoteClick(props.id) } className=\"arrowbtn arrowbtn-up\"><p> ^</p></div><p className=\"yumm\">Yumms: {props.upvoteCount}</p>\r\n        \r\n        <div><p onClick={() => props.onDownVoteClick(props.id) }className=\"arrowbtn arrowbtn-down\">^</p></div><p className=\"yumm yuck\">Yucks : {props.downvoteCount} </p>\r\n\r\n        <p><em>{props.formattedWaitTime}</em></p>\r\n        <button onClick = {() => props.whenRecipeClicked(props.id)} className=\"btn btn-dark\">Details</button>\r\n        <hr/>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nRecipe.propTypes = {\r\n  title: PropTypes.string,\r\n  time: PropTypes.number,\r\n  description: PropTypes.string,\r\n  id: PropTypes.string,\r\n  upvoteCount: PropTypes.number,\r\n  downvoteCount: PropTypes.number,\r\n  onUpVoteClick: PropTypes.func,\r\n  onDownVoteClick: PropTypes.func,\r\n  whenRecipeClicked: PropTypes.func,\r\n  formattedWaitTime: PropTypes.string\r\n};\r\n\r\nexport default Recipe;","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport Recipe from \"./Recipe\";\r\n\r\nfunction RecipeList(props) {\r\n\r\n  return (\r\n    <>\r\n    <hr/>\r\n    {Object.values(props.recipeList).map((recipe) => {\r\n    return <Recipe\r\n      whenRecipeClicked = {props.onRecipeSelection}      \r\n      title= {recipe.title}\r\n      time={recipe.time}\r\n      description= {recipe.description}\r\n      formattedWaitTime={recipe.formattedWaitTime}\r\n      upvoteCount={recipe.upvoteCount}\r\n      downvoteCount={recipe.downvoteCount}\r\n      onUpVoteClick = {props.onUpvote}\r\n      onDownVoteClick = {props.onDownvote}\r\n      id= {recipe.id}\r\n      key={recipe.id} />\r\n    })}\r\n    </>\r\n    );\r\n}\r\n\r\nRecipeList.propTypes = {\r\n  recipeList: PropTypes.array,\r\n  onRecipeSelection: PropTypes.func,\r\n  onUpvote: PropTypes.func,\r\n  onDownvote: PropTypes.func\r\n};\r\n\r\nexport default RecipeList;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction RecipeDetail(props){\r\n  const { recipe } = props;\r\n\r\n  return (\r\n    <>\r\n      <h2>Recipe Details</h2>\r\n        <h3>{recipe.title}</h3>\r\n        <p><em>Time to Cook: {recipe.time} minutes</em></p>\r\n        <p>Ingredients: {recipe.description}</p>\r\n        <p>Posted: <em>{recipe.formattedWaitTime}</em></p>\r\n        <p>⬆️ {recipe.upvoteCount} ⬇️ {recipe.downvoteCount}</p>\r\n        <button onClick= {() => props.onClickingDelete(recipe.id) } className=\"btn btn-dark space\">Delete Recipe</button>\r\n        <button onClick= {props.onClickingEdit } className=\"btn btn-dark space\">Update Recipe</button>\r\n    </>\r\n  )\r\n}\r\n\r\nRecipeDetail.propTypes = {\r\n  recipe: PropTypes.object,\r\n  onClickingDelete: PropTypes.func,\r\n  OnClickingEdit: PropTypes.func\r\n}\r\n\r\nexport default RecipeDetail;","import React from \"react\";\r\nimport ReusableForm from \"./ReusableForm\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction EditRecipeForm (props) {\r\n  const { recipe } = props;\r\n\r\n  function handleEditRecipeFormSubmission(event) {\r\n    event.preventDefault();\r\n    props.onEditRecipe({\r\n      title: event.target.title.value, \r\n      time: event.target.time.value, \r\n      description: event.target.description.value, \r\n      id: recipe.id,\r\n      timeOpen: recipe.timeOpen,\r\n      formattedWaitTime: recipe.formattedWaitTime\r\n    });\r\n  }\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ReusableForm \r\n        formSubmissionHandler={handleEditRecipeFormSubmission}\r\n        buttonText=\"Update Recipe\" />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nEditRecipeForm.propTypes = {\r\n  recipe: PropTypes.object,\r\n  onEditRecipe: PropTypes.func\r\n};\r\n\r\nexport default EditRecipeForm;","export const ADD_RECIPE = 'ADD_RECIPE';\r\nexport const TOGGLE_FORM = 'TOGGLE_FORM';\r\nexport const DELETE_RECIPE = 'DELETE_RECIPE';\r\nexport const UPDATE_TIME = 'UPDATE_TIME';\r\nexport const UPVOTE = 'UPVOTE';\r\nexport const DOWNVOTE = 'DOWNVOTE';","import * as c from './ActionTypes';\r\n\r\nexport const deleteRecipe = (id) => ({\r\n  type: c.DELETE_RECIPE,\r\n  id\r\n});\r\n\r\nexport const toggleForm = () => ({\r\n  type: c.TOGGLE_FORM\r\n});\r\n\r\nexport const addRecipe = (recipe) => {\r\n  const {title, time, description, id, upvoteCount, downvoteCount, timeOpen, formattedWaitTime } = recipe;\r\n  return {\r\n    type: c.ADD_RECIPE,\r\n    title: title,\r\n    time: time,\r\n    description : description,\r\n    id : id,\r\n    upvoteCount: upvoteCount,\r\n    downvoteCount: downvoteCount,\r\n    formattedWaitTime,\r\n    timeOpen : timeOpen\r\n  }\r\n}\r\n\r\nexport const updateTime = (id, formattedWaitTime) => ({\r\n  type: c.UPDATE_TIME,\r\n  id: id,\r\n  formattedWaitTime: formattedWaitTime\r\n});\r\n\r\nexport const upVote = (id) => ({\r\n  type: c.UPVOTE,\r\n  id\r\n});\r\n\r\nexport const downVote = (id) => ({\r\n  type: c.DOWNVOTE,\r\n  id\r\n});","import React from 'react';\r\nimport NewRecipeForm from './NewRecipeForm';\r\nimport RecipeList from './RecipeList';\r\nimport RecipeDetail from './RecipeDetail';\r\nimport EditRecipeForm from './EditRecipeForm';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from \"prop-types\";\r\nimport * as a from './../actions';\r\n\r\nclass RecipeControl extends React.Component {\r\n\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedRecipe: null,\r\n      editing: false\r\n    };\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.waitTimeUpdateTimer = setInterval(() => \r\n      this.updateRecipeElapsedWaitTime(), 6000\r\n    );\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    clearInterval(this.waitTimeUpdateTimer);\r\n  }\r\n\r\n  updateRecipeElapsedWaitTime = () => {\r\n    const { dispatch } = this.props;\r\n    Object.values(this.props.mainRecipeList).forEach(recipe => {\r\n      const newFormattedWaitTime = recipe.timeOpen.fromNow(true);\r\n      const action = a.updateTime(recipe.id, newFormattedWaitTime);\r\n      dispatch(action);\r\n    });\r\n  }\r\n\r\n  handleClick = () => {\r\n    if (this.state.selectedRecipe != null) {\r\n      this.setState({\r\n        selectedRecipe: null,\r\n        editing: false\r\n      });\r\n    } else {\r\n      const { dispatch } = this.props\r\n      const action = a.toggleForm();\r\n      dispatch(action);\r\n    }\r\n  }\r\n\r\n  handleAddingNewRecipeToList = (newRecipe) => {\r\n    const { dispatch } = this.props;\r\n    const action = a.addRecipe(newRecipe);\r\n    dispatch(action);\r\n    const action2 = a.toggleForm();\r\n    dispatch(action2);\r\n  }\r\n\r\n  handleChangingSelectedRecipe = (id) => {\r\n    const selectedRecipe = this.props.mainRecipeList[id];\r\n    this.setState({selectedRecipe: selectedRecipe})\r\n  }\r\n\r\n  handleDeletingRecipe = (id) => {\r\n    const { dispatch } = this.props;\r\n    const action = a.deleteRecipe(id);\r\n    dispatch(action);\r\n    this.setState({selectedRecipe: null});\r\n  }\r\n\r\n  handleEditClick = () => {\r\n    this.setState({editing: true});\r\n  }\r\n\r\n  handleEditingRecipeInList = (recipeToEdit) => {\r\n    const { dispatch } = this.props;\r\n    const action = a.addRecipe(recipeToEdit);\r\n    dispatch(action);\r\n    this.setState({\r\n      editing: false,\r\n      selectedRecipe: null\r\n    });\r\n  }\r\n\r\n\r\n  handleUpvote = (id) => {\r\n    const { dispatch } = this.props;\r\n    const action = a.upVote(id);\r\n    dispatch(action);\r\n  }\r\n\r\n  handleDownvote = (id) => {\r\n    const { dispatch } = this.props;\r\n    const action = a.downVote(id);\r\n    dispatch(action);\r\n    };\r\n  \r\n\r\n  render(){\r\n    let currentlyVisibleState = null;\r\n    let buttonText = null;\r\n    if (this.state.editing) {\r\n      currentlyVisibleState = <EditRecipeForm recipe = {this.state.selectedRecipe} onEditRecipe = {this.handleEditingRecipeInList} />\r\n      buttonText = \"Return to Recipe Forum\";\r\n    } else if (this.state.selectedRecipe != null) {\r\n      currentlyVisibleState =\r\n      <RecipeDetail\r\n        recipe = {this.state.selectedRecipe}\r\n        onClickingDelete = {this.handleDeletingRecipe}\r\n        onClickingEdit = {this.handleEditClick} />\r\n      buttonText = \"Return to Recipe List\";\r\n    } else if (this.props.formVisibleOnPage) {\r\n      currentlyVisibleState = <NewRecipeForm onNewRecipeCreation={this.handleAddingNewRecipeToList} />;\r\n      buttonText = \"Return to Recipe List\";\r\n    } else {\r\n      currentlyVisibleState = <RecipeList recipeList = {this.props.mainRecipeList} onRecipeSelection={this.handleChangingSelectedRecipe} onUpvote={this.handleUpvote} onDownvote={this.handleDownvote}/>;\r\n      buttonText = \"Add Recipe\";\r\n    }\r\n    return (\r\n      <>\r\n        {currentlyVisibleState}\r\n        <button onClick={this.handleClick} className=\"btn btn-dark\">{buttonText}</button>\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\nRecipeControl.propTypes = {\r\n  mainRecipeList: PropTypes.object,\r\n  formVisibleOnPage: PropTypes.bool\r\n};\r\n\r\nconst sortHappy = (recipeList) => {\r\n  const sortArray = Object.entries(recipeList);\r\n  const arraySorted = sortArray.sort((a,b) => (b[1].upvoteCount - b[1].downvoteCount) - (a[1].upvoteCount - a[1].downvoteCount));\r\n  return Object.fromEntries(arraySorted)\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  const sortedList = sortHappy(state.mainRecipeList);\r\n  return {\r\n    mainRecipeList: sortedList,\r\n    formVisibleOnPage: state.formVisibleOnPage\r\n  };\r\n};\r\n\r\nRecipeControl = connect(mapStateToProps)(RecipeControl);\r\n\r\nexport default RecipeControl;","import React from 'react';\r\nimport Header from './Header';\r\nimport RecipeControl from './RecipeControl';\r\nimport '../App.css'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App container\">\r\n      <Header />\r\n      <RecipeControl />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import formVisibleReducer from './form-visible-reducer';\r\nimport recipeListReducer from './recipe-list-reducer';\r\nimport { combineReducers } from 'redux';\r\n\r\nconst rootReducer = combineReducers({\r\n  formVisibleOnPage: formVisibleReducer,\r\n  mainRecipeList: recipeListReducer\r\n});\r\n\r\nexport default rootReducer;","import * as c from './../actions/ActionTypes';\r\n\r\nexport default (state = false, action) => {\r\n  switch (action.type) {\r\n  case c.TOGGLE_FORM:\r\n    return !state;\r\n  default:\r\n    return state;\r\n  }\r\n};","import * as c from './../actions/ActionTypes';\r\n\r\nexport default (state = {}, action) => {\r\n  const { title, time, description, id, upvoteCount, downvoteCount, timeOpen, formattedWaitTime } = action;\r\n  switch (action.type) {\r\n    case c.ADD_RECIPE:\r\n      return Object.assign({}, state, {\r\n        [id]: {\r\n          title: title,\r\n          time: time,\r\n          description : description,\r\n          id : id,\r\n          upvoteCount : upvoteCount,\r\n          downvoteCount : downvoteCount,\r\n          timeOpen : timeOpen,\r\n          formattedWaitTime: formattedWaitTime\r\n        }\r\n      });\r\n    case c.DELETE_RECIPE:\r\n      let newState = { ...state };\r\n      delete newState[id];\r\n      return newState;\r\n    case c.UPVOTE:\r\n      let newState1 = { ...state };\r\n      newState1[id].upvoteCount++;\r\n      return newState1;\r\n    case c.DOWNVOTE:\r\n      let newState2 = { ...state };\r\n      newState2[id].downvoteCount++;\r\n      return newState2;\r\n    case c.UPDATE_TIME:\r\n      const newRecipe = Object.assign({}, state[id], {formattedWaitTime});\r\n      const updatedState = Object.assign({}, state, {\r\n        [id]: newRecipe\r\n      });\r\n      return updatedState;\r\n    default:\r\n      return state;\r\n  }\r\n};","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport { createStore } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport rootReducer from './reducers/index';\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nstore.subscribe(() =>\r\n  console.log(store.getState())\r\n);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}